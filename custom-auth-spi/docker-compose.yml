version: '3.8'

services:
  postgres-db:
    image: postgres:latest
    container_name: postgres-db-${USER}
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: mudar1234
      POSTGRES_DB: keycloakDB
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    container_name: keycloak-${USER}
    restart: always
    depends_on:
      - postgres-db
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-db-${USER}:5432/keycloakDB
      KC_DB_USERNAME: user
      KC_DB_PASSWORD: mudar1234
      KC_HOSTNAME: localhost
      KC_PROXY: edge
      KC_HTTP_CORS: true
      KC_HTTP_CORS_ORIGIN: "*"
      KC_HTTP_CORS_ALLOWED_ORIGINS: "http://localhost:5173"
      KC_HTTP_CORS_ALLOWED_METHODS: "GET,POST,OPTIONS,PUT,DELETE"
      KC_HTTP_CORS_ALLOWED_HEADERS: "Authorization,Content-Type,Accept,X-Konneqt-Token"
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/test-realm.json
    ports:
      - "8080:8080"
    volumes:
      - ./test-realm.json:/opt/keycloak/data/import/test-realm.json
      - ./target/custom-auth-spi-1.0-SNAPSHOT.jar:/opt/keycloak/providers/custom-auth-spi-1.0-SNAPSHOT.jar
    command: [ "start-dev", "--import-realm" ]

  backend:
    build:
      context: ../keycloak-admin-service
      dockerfile: Dockerfile
    container_name: keycloak-admin-service-${USER}
    depends_on:
      - keycloak
      - postgres-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db-${USER}:5432/keycloakDB
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: mudar1234
    ports:
      - "8081:8081"

  frontend:
    build:
      context: ../keycloak-spi-frontend
      dockerfile: Dockerfile
    container_name: frontend-${USER}
    depends_on:
      - backend
    ports:
      - "5173:80"  # Host 5173 maps to container 80 (Nginx)
    restart: always

volumes:
  pgdata:
